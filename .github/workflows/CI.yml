name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:

  build:
    strategy:
      matrix:
        board:
          - esp8266:esp8266:generic

    runs-on: ubuntu-latest
    name: ${{ matrix.board }}
    env:
      GH_TOKEN: ${{ github.token }}
      run-build: ${{ contains(matrix.board, 'esp8266:esp8266') || contains(github.event.head_commit.message, 'CI_BUILD_ALL') || contains(github.event.head_commit.message, 'Bump version to') || contains(github.event.head_commit.message, format('{0}', matrix.board)) }}

    steps:
      - name: Install arduino-cli
        if: ${{ env.run-build == 'true' }}
        run:
          |
          mkdir -p ~/.local/bin
          echo "~/.local/bin" >> $GITHUB_PATH
          curl -fsSL https://raw.githubusercontent.com/arduino/arduino-cli/master/install.sh | BINDIR=~/.local/bin sh

      - name: Get platform name
        if: ${{ env.run-build == 'true' }}
        uses: jungwinter/split@v2
        id: split
        with:
          msg: ${{ matrix.board }}
          separator: ':'

      - name: Prepare platform-specific settings
        if: ${{ env.run-build == 'true' }}
        id: prep
        run:
          |
          # common settings - no extra options, skip nothing, all warnings
          echo "skip-pattern=''" >> $GITHUB_OUTPUT
          echo "warnings='all'" >> $GITHUB_OUTPUT
          
          # platform-dependent settings - extra board options, board index URLs, skip patterns etc.
          if [[ "${{ contains(matrix.board, 'esp8266:esp8266') }}" == "true" ]]; then
            # ESP8266
            echo "options=:xtal=80,ResetMethod=ck,CrystalFreq=26,FlashFreq=40,FlashMode=qio,eesz=512K" >> $GITHUB_OUTPUT
            echo "index-url=--additional-urls http://arduino.esp8266.com/stable/package_esp8266com_index.json" >> $GITHUB_OUTPUT
            #echo "skip-pattern=(HTTP|MQTT).*ino" >> $GITHUB_OUTPUT

          fi
          
      - name: Install libraries
        if: ${{ env.run-build == 'true' }}
        run:
          |
          ps -p "$$"
          arduino-cli lib install MQTT@2.5.0
          arduino-cli lib install WiFiManager@2.0.15-rc.1
          gh repo clone pimatic/RFControl
          cp -r RFControl /home/runner/Arduino/libraries/
          pwd
          ls
          ls /home/runner/Arduino/libraries
          
      - name: Install platform
        if: ${{ env.run-build == 'true' }}
        run:
          |
          arduino-cli core update-index ${{ format('{0}', steps.prep.outputs.index-url) }}
          arduino-cli core install ${{ format('{0}:{1} {2}', steps.split.outputs._0, steps.split.outputs._1, steps.prep.outputs.index-url) }}

      - name: Checkout repository
        if: ${{ env.run-build == 'true' }}
        uses: actions/checkout@v3
      
      - name: Build sketch
        if: ${{ env.run-build == 'true' }}
        run:
          |
          #for example in $(find $PWD/examples -name '*.ino' | sort); do
          # modified to compile a singe sketch (instead of a library's examples)
          for example in $(find $PWD -name '*.ino' | sort); do
            # check whether to skip this sketch
            if [ ! -z '${{ steps.prep.outputs.skip-pattern }}' ] && [[ ${example} =~ ${{ steps.prep.outputs.skip-pattern }} ]]; then
              # skip sketch
              echo -e "\n\033[1;33mSkipped ${example##*/} (matched with ${{ steps.prep.outputs.skip-pattern }})\033[0m";
            else
              # build sketch
              echo -e "\n\033[1;33mBuilding ${example##*/} ... \033[0m";
              arduino-cli compile --libraries /home/runner/work/esp8266_awning_control --fqbn ${{ matrix.board }}${{ steps.prep.outputs.options }} $example --warnings=${{ steps.prep.outputs.warnings }}
              
              
              if [ $? -ne 0 ]; then
                echo -e "\033[1;31m${example##*/} build FAILED\033[0m\n";
                exit 1;
              else
                echo -e "\033[1;32m${example##*/} build PASSED\033[0m\n";
              fi
            fi
          done
